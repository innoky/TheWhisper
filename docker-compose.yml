version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: Europe/Moscow  
      PGTZ: Europe/Moscow 
    
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - app-network
    environment:
      TZ: Europe/Moscow 
      PGTZ: Europe/Moscow 

  whisper_bot:
    build:
      context: ./whisper_bot
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network

  # askmephi_bot:
  #   build:
  #     context: ./askmephi_bot
  #   restart: always
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db
  #   networks:
  #     - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False' 
      TZ: Europe/Moscow
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - db

  # askmephi_search:
  #   build:
  #     context: ./askmephi_search
  #   restart: always
  #   env_file:
  #     - .env
  #   ports:
  #     - "8001:8001"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - backend
  #   environment:
  #     TZ: Europe/Moscow
      
volumes:
  pgdata:
  pgadmin_data:

networks:
  app-network:
    driver: bridge

